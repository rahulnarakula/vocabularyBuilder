{"version":3,"sources":["Components/Home/home.js","Components/LearnMode/word-ingredient.js","Components/LearnMode/word-header.js","Components/LearnMode/definition.js","Components/LearnMode/statement.js","Components/LearnMode/answer-option.js","Components/LearnMode/question.js","Components/LearnMode/word-content.js","Components/LearnMode/word-container.js","Components/LearnMode/learn-mode.js","Components/TestMode/missing-letter.js","Components/TestMode/word-result.js","Components/TestMode/missing-word.js","Components/TestMode/test-container.js","Components/TestMode/test-mode.js","Router/routes.js","App.js","serviceWorker.js","index.js"],"names":["Home","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","react_router_dom","to","Component","WordIngredient","props","id","content","roots","map","item","data-tree-id","data-tree-url","href","root","meaning","example","WordHeader","word","spell","DefinitionText","display","definition","Definition","onClick","Statement","AnswerOption","_this","call","state","correct_answer_color","wrong_answer_color","is_question_completed","_this2","background","selected","isAnswer","index","answer","Question","selected_options","nextProps","question","setState","selectedOptions","push","triggerDefinition","listAnswers","answers","answer_option_AnswerOption","includes","parseInt","correct_answer","wrongColor","i","j","handleClick","WordContent","should_display_definition","bind","assertThisInitialized","sentence","questionContent","question_Question","WordContainer","wordBody","wordDetails","word_content_WordContent","wordContent","wordIngredient","LearnMode","render","position","currentPosition","wordBodyList","listCount","body","incrementPosition","fetch","then","response","json","resData","length","MissingLetter","keyPositionID","letterPosition","maxLength","onChange","e","handleChange","WordResult","enteredWord","input","correct","missedLettersCount","charAt","setTimeout","callNextWord","MissingWord","enteredLetters","Array","callParentGetNextWord","formedWord","join","event","enteredLetter","target","prevEnteredLetters","toConsumableArray","checkIsWordCompleted","closest","nextElementSibling","children","focus","previousElementSibling","getNextWord","_this3","wordArray","split","missing_letter_MissingLetter","letter","word_result_WordResult","TestContainer","blank","blankedContent","missing_word_MissingWord","TestMode","colors","colorPositon","document","style","Routes","basename","react_router","path","exact","component","App","routes_Routes","Boolean","window","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f72b7b2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class Home extends Component{\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h1 className='mx-auto my-4'>Vocabulary Bulider</h1>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <Link className=\"learn-link text-center d-block  p-3 border border-primary rounded\" to=\"/learn\">Learn</Link>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <Link className=\"test-link text-center d-block  p-3 border border-primary rounded\" to=\"/test\">Test</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport function WordIngredient(props){\r\n    return (\r\n        \r\n        <div className=\"card my-5\">\r\n            <div className=\"module-medium panel \" id=\"word-structure\">\r\n                <h3 className=\"title card-header\">Word Ingredients</h3>\r\n                <div className=\"content card-body\">\r\n                    <table>\r\n                        <tbody>\r\n                            {props.content.roots.map((item,key)=>{\r\n                                return (        \r\n                                    <tr key={key}>\r\n                                        <td>\r\n                                            <a className=\"wi-btn partform\" data-tree-id=\"tort_twisted\" data-tree-url=\"//cdn1.membean.com/public/data/treexml\" href=\"#\">\r\n                                                <span className=\"\"></span>\r\n                                                {item.root}\r\n                                            </a>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td className=\"meaning\">{item.meaning}</td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                    <p>\r\n                        {props.content.example}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport function WordHeader(props){\r\n    return (\r\n        <div className=\"row my-3\">\r\n                    <div className=\"main-word text-center mx-auto\">\r\n                        <h1 className='text-uppercase'>{props.content.word}</h1>\r\n                        <h5>{props.content.spell}</h5>\r\n                    </div>\r\n                </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nfunction DefinitionText(props) {\r\n    if (props.display) {\r\n        return (\r\n            <div className=\"def-bubble bg-info text-white p-3\">\r\n                {props.definition}\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function Definition(props) {\r\n    return (\r\n        <div id=\"definition\">\r\n            <button className=\"show-definition btn btn-primary my-2\" onClick={() => props.onClick()}>Definition</button>\r\n            <DefinitionText display={props.display} definition={props.definition} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport function Statement(props){\r\n    return (\r\n        <div className=\"context-statement\">\r\n            {props.content}\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\n\r\nexport class AnswerOption extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            correct_answer_color:\"alert-success\",\r\n            wrong_answer_color:\"alert-danger\",\r\n            content:props.content,\r\n            is_question_completed: false\r\n                    }\r\n    }\r\n    render(){        \r\n        const background = this.props.selected? this.props.isAnswer? this.state.correct_answer_color: this.state.wrong_answer_color: \" \";\r\n        return (\r\n            <li \r\n            className={\"choice answer border my-3 rounded p-2 \" + background}\r\n            onClick={()=>this.props.onClick(this.props.isAnswer,this.props.index)}>\r\n                <span className=\"result mr-2\">{this.props.index+1}.</span>\r\n                {this.props.answer}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { AnswerOption } from './answer-option';\r\n\r\nexport class Question extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected_options: [],\r\n            content: props.content,\r\n            is_question_completed: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.content && nextProps.content && this.props.content.question !== nextProps.content.question) {\r\n            this.setState({\r\n                selected_options: [],\r\n                content: nextProps.content,\r\n                is_question_completed: false\r\n            });\r\n        }\r\n    }\r\n    handleClick(isAnswer, index) {\r\n        if (!this.state.is_question_completed) {\r\n            if (isAnswer) {\r\n                let selectedOptions = this.state.selected_options;\r\n                selectedOptions.push(index);\r\n                this.setState({\r\n                    is_question_completed: true\r\n                });\r\n                // this.state.is_question_completed=true;\r\n                this.setState({ selected_options: selectedOptions });\r\n                this.props.triggerDefinition();\r\n            } else {\r\n                let selectedOptions = this.state.selected_options;\r\n                selectedOptions.push(index);\r\n                this.setState({ selected_options: selectedOptions });\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    render() {\r\n        const listAnswers = this.state.content.answers.map((answer, index) =>\r\n            <AnswerOption\r\n                answer={answer}\r\n                key={index}\r\n                selected={this.state.selected_options.includes(index)}\r\n                index={index} isAnswer={parseInt(this.state.content.correct_answer) === index + 1}\r\n                wrongColor={this.state.wrong_answer_color} onClick={(i, j) => this.handleClick(i, j)} />\r\n        );\r\n\r\n        return (\r\n            <div className=\"question-answer\">\r\n                <div className=\"context-question mt-4\">\r\n                    <h3 className='ml-3'>{this.props.content.question}</h3>\r\n                </div>\r\n                <div className=\"context-options\">\r\n                    <ul id=\"choice-section\" className='pr-5'>\r\n                        {listAnswers}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Definition } from './definition';\r\nimport { Statement } from './statement';\r\nimport { Question } from './question';\r\n\r\nexport class WordContent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            should_display_definition: false\r\n        };\r\n        this.triggerDefinition = this.triggerDefinition.bind(this);\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if (this.props.content && nextProps.content && this.props.content !== nextProps.content) {\r\n            this.setState({\r\n                should_display_definition: false\r\n            });\r\n        }\r\n    }\r\n\r\n    triggerDefinition() {\r\n        if (!this.state.should_display_definition) {\r\n            this.setState({ should_display_definition: true });\r\n        }\r\n    }\r\n    render() {\r\n        const content = this.props.content.sentence;\r\n        const questionContent = this.props.content.questionContent;\r\n        const definition = this.props.content.definition;\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"context-heading card-header\">Context</div>\r\n                <div className=\"context-body card-body\">\r\n                    <Statement content={content} />\r\n                    <Question content={questionContent} triggerDefinition={() => this.triggerDefinition()} />\r\n                    <Definition\r\n                        display={this.state.should_display_definition}\r\n                        onClick={() => this.triggerDefinition()}\r\n                        definition={definition}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport {WordIngredient} from './word-ingredient';\r\nimport {WordHeader} from './word-header';\r\nimport {WordContent} from './word-content';\r\n\r\nexport function WordContainer(props){\r\n        const wordBody = props.wordBody;\r\n        if(wordBody){\r\n            return (\r\n                <div className=\"container\">                \r\n                    <WordHeader content={wordBody.wordDetails}/>\r\n                    <WordContent content={wordBody.wordContent}/>\r\n                    <WordIngredient content={wordBody.wordIngredient}/>\r\n                </div>\r\n            );\r\n        } else{\r\n            return null;\r\n        }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { WordContainer } from './word-container';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class LearnMode extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            wordBodyList: null,\r\n            currentPosition: null,\r\n            listCount: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://my-json-server.typicode.com/rahulnarakula/vocabularyBuilder/words')\r\n            .then(response => response.json())\r\n            .then(resData => {\r\n                this.setState({\r\n                    wordBodyList: resData,\r\n                    listCount: resData.length,\r\n                    currentPosition: 0\r\n                }); //this is an asynchronous function\r\n            })\r\n    }\r\n\r\n    incrementPosition() {\r\n        var position = this.state.currentPosition;\r\n        this.setState({\r\n            currentPosition: ++position\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        const position = this.state.currentPosition;\r\n        const wordBodyList = this.state.wordBodyList;\r\n        if (position != null && position >= 0 && position < this.state.listCount && wordBodyList) {\r\n            const wordBody = wordBodyList[position].body;\r\n            return (\r\n                <div>\r\n                    <button className=\"btn-primary float-right m-3 rounded\" onClick={() => this.incrementPosition()}>Next</button>\r\n                    <WordContainer wordBody={wordBody} />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<div className=\"container\">\r\n                <div className=\"col d-flex justify-content-center mt-5\">\r\n                    <div className=\"card p-5\">\r\n                        <h3>You have covered all the words.</h3>\r\n                        \r\n                        <Link className=\"test-link text-center d-block  p-3 border border-primary rounded mt-3\" to=\"/test\">Time to take a Test</Link>                        \r\n                    </div>\r\n                </div>\r\n            </div>);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport class MissingLetter extends Component{\r\n    render() {\r\n        const keyPositionID = \"key-position-\"+this.props.letterPosition;\r\n        return (\r\n            <span className=\"letter-block m-2\">\r\n                <input className=\"border single-letter rounded shadow\" id={keyPositionID} maxLength='1' onChange={(e) => {this.props.handleChange(e,this.props.letterPosition)}}/>\r\n            </span>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class WordResult extends Component {\r\n    render() {\r\n        if (this.props.enteredWord.length > 0) {\r\n            var answer = this.props.word;\r\n            var input = this.props.enteredWord;\r\n            var length = input.length;\r\n            var correct = (input === answer) ? \"Correct\" : \"Wrong\";\r\n            if (correct === \"Wrong\") {\r\n                var missedLettersCount = 0;\r\n                for (var i = 0; i < length; i++) {\r\n                    if (input.charAt(i) !== answer.charAt(i)) {\r\n                        missedLettersCount++;\r\n                    }\r\n                }\r\n                if (missedLettersCount === 1) {\r\n                    correct = \"Missed by \" + missedLettersCount + \" letter\";\r\n                } else if (missedLettersCount === 2) {\r\n                    correct = \"Missed by \" + missedLettersCount + \" letters\";\r\n                }\r\n            }\r\n            setTimeout(\r\n                function () {\r\n                    this.props.callNextWord();\r\n                }\r\n                    .bind(this),\r\n                5000\r\n            );\r\n            return (\r\n                <div className=\"col d-flex justify-content-center my-5\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header text-center word-result\">{correct}</div>\r\n                        {correct === \"Correct\" ? \"\" :\r\n                            <div className=\"card-body word-correction text-center\">\r\n                                <span className=\"wrong-answer mr-2\">{input}</span>\r\n                                <span className=\"arrow mr-2\">{\"-->\"}</span>\r\n                                <span className=\"correct-answer\">{answer}</span>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { MissingLetter } from './missing-letter';\r\nimport { WordResult } from './word-result';\r\n\r\nexport class MissingWord extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            enteredLetters: Array(this.props.word.length),\r\n            enteredWord: \"\"\r\n        }\r\n\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.callParentGetNextWord = this.callParentGetNextWord.bind(this);\r\n\r\n    }\r\n    componentWillReceiveProps() {\r\n        this.setState({\r\n            enteredLetters: Array(this.props.word.length),\r\n            enteredWord: \"\"\r\n        });\r\n    }\r\n    checkIsWordCompleted() {\r\n        var formedWord = this.state.enteredLetters.join(\"\");\r\n        if (formedWord.length === this.props.word.length) {\r\n            this.setState({\r\n                enteredWord: formedWord\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange(event, key) {\r\n        var enteredLetter = event.target.value;\r\n        var target = event.target;\r\n        var prevEnteredLetters = [...this.state.enteredLetters];\r\n        prevEnteredLetters[key] = enteredLetter;\r\n\r\n        this.setState({\r\n            enteredLetters: prevEnteredLetters\r\n        },\r\n            () => {\r\n                this.checkIsWordCompleted();\r\n            }\r\n        );\r\n        if (enteredLetter) {\r\n            if (target.closest('span').nextElementSibling) {\r\n                target.closest('span').nextElementSibling.children[0].focus();\r\n            }\r\n        } else {\r\n            if (target.closest('span').previousElementSibling) {\r\n                target.closest('span').previousElementSibling.children[0].focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    callParentGetNextWord() {\r\n        this.props.getNextWord();\r\n    }\r\n\r\n    render() {\r\n        const word = this.props.word;\r\n        const wordArray = word.split(\"\");\r\n        return (\r\n            <div>\r\n                <div className=\"col d-flex justify-content-center my-5\">\r\n                    {wordArray.map((answer, i) => {\r\n                        return (<MissingLetter key={word + i} letter={answer} letterPosition={i} handleChange={this.handleChange} />);\r\n                    })}\r\n                </div>\r\n                <WordResult word={this.props.word} enteredWord={this.state.enteredWord} callNextWord={() => this.callParentGetNextWord()} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {MissingWord} from './missing-word';\r\nexport function TestContainer(props){         \r\n    var content = props.content;\r\n    var word = props.word;\r\n    var blank = new Array(word.length + 1).join('_');\r\n    var blankedContent = content.split(word).join(blank);\r\n    function CallNextWord(){\r\n        props.getNextWord()\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"card\">\r\n            <div className=\"context-heading card-header\">Enter the Spelling of missing word</div>\r\n            <div className=\"context-body card-body\">\r\n                {blankedContent}\r\n            </div>\r\n        </div>\r\n        \r\n        <MissingWord  word={word} getNextWord={()=>CallNextWord()}/>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport {TestContainer} from './test-container';\r\n\r\nexport class TestMode extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            wordBodyList: null,\r\n            currentPosition: null,\r\n            listCount: null,\r\n            colors:[\"#eff7ff\",\"#ffe5eb\",\"#e6ffe5\"]\r\n        }\r\n        this.incrementPosition = this.incrementPosition.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        fetch('https://my-json-server.typicode.com/rahulnarakula/vocabularyBuilder/words')\r\n        .then(response =>  response.json())\r\n        .then(resData => {\r\n           this.setState({ \r\n               wordBodyList: resData,\r\n               listCount: resData.length,\r\n               currentPosition: 0\r\n             }); //this is an asynchronous function\r\n        })\r\n    }\r\n\r\n    \r\n    incrementPosition(){\r\n        var position = this.state.currentPosition;\r\n        this.setState({\r\n            currentPosition: ++position\r\n        });\r\n    }\r\n\r\n    render() { \r\n        const position = this.state.currentPosition;\r\n        var colorPositon = position%this.state.colors.length;\r\n        document.body.style = 'background: '+ this.state.colors[colorPositon]+';';\r\n        const wordBodyList = this.state.wordBodyList;\r\n        if(position != null && position >= 0 && position < this.state.listCount && wordBodyList){\r\n            const word = wordBodyList[position].body.wordDetails.word;\r\n            const content = wordBodyList[position].body.wordContent.sentence;\r\n            return (\r\n                <div className=\"col d-flex justify-content-center mt-5 pt-3\">\r\n                    <TestContainer content={content} word={word} getNextWord={()=>this.incrementPosition()}/>\r\n                </div>\r\n            );\r\n        } else{\r\n            return (\r\n                <div className=\"col d-flex justify-content-center mt-5 pt-3\">\r\n                    <h2>Completed!</h2>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport {Home} from '.././Components/Home/home';\r\nimport {LearnMode} from '.././Components/LearnMode/learn-mode';\r\nimport {TestMode} from '.././Components/TestMode/test-mode';\r\n\r\nexport class Routes extends Component{\r\n    render(){\r\n        return(\r\n            <Router basename=\"/vocabularyBuilder\">\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/learn/\" component={LearnMode} />\r\n                <Route path=\"/test/\" component={TestMode} />\r\n            </Router>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {Routes} from './Router/routes'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Routes />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}